//package com.example.final_project.views.activity;
//
//import android.os.Bundle;
//import android.util.Log;
//import android.view.inputmethod.EditorInfo;
//import android.widget.EditText;
//import android.widget.ImageButton;
//
//import androidx.appcompat.app.AppCompatActivity;
//import androidx.recyclerview.widget.LinearLayoutManager;
//import androidx.recyclerview.widget.RecyclerView;
//
//import com.example.final_project.BuildConfig;
//import com.example.final_project.R;
//import com.example.final_project.helper.GeminiApi;
//import com.example.final_project.models.entity.ChatMessage;
//import com.example.final_project.models.entity.FoodItem;
//import com.example.final_project.viewmodels.FoodItemViewModel;
//import com.example.final_project.views.adapter.ChatAdapter;
//
//import java.util.ArrayList;
//import java.util.List;
//
//public class ChatActivity extends AppCompatActivity {
//
//    private RecyclerView recyclerViewChat;
//    private EditText etMessage;
//    private ImageButton btnSend;
//    private List<ChatMessage> chatMessages;
//    private ChatAdapter chatAdapter;
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_chat);
//
//        recyclerViewChat = findViewById(R.id.recyclerViewChat);
//        etMessage = findViewById(R.id.etMessage);
//        btnSend = findViewById(R.id.btnSend);
//
//        chatMessages = new ArrayList<>();
//        chatAdapter = new ChatAdapter(chatMessages);
//        recyclerViewChat.setLayoutManager(new LinearLayoutManager(this));
//        recyclerViewChat.setAdapter(chatAdapter);
//        btnSend.setOnClickListener(v -> sendMessage());
//
//        greetUser();
//    }
//
//    private void sendMessage() {
//        String message = etMessage.getText().toString().trim();
//        if (message.isEmpty()) return;
//
//        chatMessages.add(new ChatMessage(message, true));
//        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//        recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
//        etMessage.setText("");
//
//        ChatMessage thinkingMessage = new ChatMessage("ƒêang suy nghƒ©...", false);
//        chatMessages.add(thinkingMessage);
//        int thinkingIndex = chatMessages.size() - 1;
//        chatAdapter.notifyItemInserted(thinkingIndex);
//        recyclerViewChat.scrollToPosition(thinkingIndex);
//        String m = message.toLowerCase().trim();
//        if (m.contains("t·ªß l·∫°nh") || m.contains("tu lanh") || m.contains("my fridge")) {
//            new Thread(() -> {
//                try {
//                    FoodItemViewModel viewModel = new FoodItemViewModel();
//                    String userId = "2"; // sau n√†y l·∫•y t·ª´ session ƒëƒÉng nh·∫≠p
//                    List<FoodItem> foodItems = viewModel.getFoodItemsByUserId(userId);
//
//                    if (foodItems == null || foodItems.isEmpty()) {
//                        runOnUiThread(() -> {
//                            chatMessages.remove(thinkingIndex);
//                            chatAdapter.notifyItemRemoved(thinkingIndex);
//
//                            chatMessages.add(new ChatMessage(
//                                    "M√¨nh ch∆∞a th·∫•y nguy√™n li·ªáu n√†o trong t·ªß l·∫°nh c·ªßa b·∫°n. " +
//                                            "B·∫°n h√£y th√™m nguy√™n li·ªáu v√†o kho tr∆∞·ªõc (V√≠ d·ª•: tr·ª©ng 6, c√† chua 3, m√¨ g√≥i 2), r·ªìi nh·∫Øn l·∫°i **my fridge** nh√©.",
//                                    false));
//                            chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                            recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
//                        });
//                        return;
//                    }
//
//                    StringBuilder ingredients = new StringBuilder();
//                    for (FoodItem item : foodItems) {
//                        if (item.getQuantity() > 0 && item.getFoodName() != null && !item.getFoodName().isEmpty()) {
//                            ingredients.append(item.getFoodName())
//                                    .append(" (").append(item.getQuantity()).append("), ");
//                        }
//                    }
//                    String ing = ingredients.toString().replaceAll(",\\s*$", "");
//
//                    if (ing.isEmpty()) { /* x·ª≠ l√Ω nh∆∞ b∆∞·ªõc (2) */ return; }
//
////                    String aiPrompt =
////                            "B·∫°n l√† ƒë·∫ßu b·∫øp. D·ª±a tr√™n c√°c nguy√™n li·ªáu trong t·ªß l·∫°nh: " + ing + ". " +
////                                    "H√£y g·ª£i √Ω ƒë√∫ng 3 m√≥n ƒÉn. V·ªõi m·ªói m√≥n, li·ªát k√™: 1) T√™n m√≥n, 2) Nguy√™n li·ªáu c·∫ßn th√™m (n·∫øu thi·∫øu), " +
////                                    "3) C√¥ng th·ª©c t√≥m t·∫Øt 4-6 b∆∞·ªõc, 4) Th·ªùi gian n·∫•u ∆∞·ªõc t√≠nh.";
//                    String aiPrompt =
//                            "B·∫°n l√† m·ªôt ƒë·∫ßu b·∫øp chuy√™n nghi·ªáp. D·ª±a v√†o nguy√™n li·ªáu sau: " + ing + ". " +
//                                    "H√£y g·ª£i √Ω ch√≠nh x√°c 3 m√≥n ƒÉn. " +
//                                    "QUAN TR·ªåNG: V·ªõi m·ªói m√≥n, h√£y tr·∫£ l·ªùi theo ƒê√öNG ƒë·ªãnh d·∫°ng sau, KH√îNG th√™m b·∫•t k·ª≥ gi·∫£i th√≠ch n√†o kh√°c:\n" +
//                                    "## [S·ªë th·ª© t·ª±]. [T√™n m√≥n ƒÉn]\n" +
//                                    "@@nguyenlieu [Li·ªát k√™ nguy√™n li·ªáu c·∫ßn th√™m]\n" +
//                                    "@@congthuc [Li·ªát k√™ c√°c b∆∞·ªõc c√¥ng th·ª©c]\n" +
//                                    "@@thoigian [Ghi th·ªùi gian n·∫•u]\n" +
//                                    "---";
//
//                    new GeminiApi().sendMessage(aiPrompt, new GeminiApi.Callback() {
//                        @Override
//                        public void onSuccess(String reply) {
//                            runOnUiThread(() -> {
//                                chatMessages.remove(thinkingIndex);
//                                chatAdapter.notifyItemRemoved(thinkingIndex);
//
//                                chatMessages.add(new ChatMessage(reply, false));
//                                chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                                recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
//                            });
//                        }
//
//
//                        @Override
//                        public void onError(Exception e) {
//                            runOnUiThread(() -> {
//                                chatMessages.remove(thinkingIndex);
//                                chatAdapter.notifyItemRemoved(thinkingIndex);
//                                chatMessages.add(new ChatMessage("L·ªói Gemini: " + e.getMessage(), false));
//                                chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                            });
//                        }
//                    });
//
//                } catch (Exception e) {
//                    runOnUiThread(() -> {
//                        chatMessages.remove(thinkingIndex);
//                        chatAdapter.notifyItemRemoved(thinkingIndex);
//                        chatMessages.add(new ChatMessage("L·ªói l·∫•y d·ªØ li·ªáu: " + e.getMessage(), false));
//                        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                    });
//                }
//            }).start();
//        } else {
//            // X·ª≠ l√Ω prompt th∆∞·ªùng
//            new GeminiApi().sendMessage(message, new GeminiApi.Callback() {
//                @Override
//                public void onSuccess(String reply) {
//                    chatMessages.remove(thinkingIndex);
//                    chatAdapter.notifyItemRemoved(thinkingIndex);
//
//                    chatMessages.add(new ChatMessage(reply, false));
//                    chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                    recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
//                }
//
//                @Override
//                public void onError(Exception e) {
//                    chatMessages.remove(thinkingIndex);
//                    chatAdapter.notifyItemRemoved(thinkingIndex);
//                    chatMessages.add(new ChatMessage("C√≥ l·ªói x·∫£y ra: " + e.getMessage(), false));
//                    chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//                }
//            });
//        }
//    }
//
//    private void greetUser() {
//        String[] greetings = {
//                "Xin ch√†o! M√¨nh l√† MealTime üçΩÔ∏è ‚Äì tr·ª£ l√Ω g·ª£i √Ω m√≥n ƒÉn c·ªßa b·∫°n h√¥m nay!",
//                "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi MealTime ü§ñ! Mu·ªën m√¨nh g·ª£i √Ω b·ªØa ƒÉn ngon mi·ªáng ch·ª©?",
//                "Hey! ƒê√¢y l√† MealTime üòã ‚Äì c√πng kh√°m ph√° m√≥n ƒÉn th√∫ v·ªã n√†o!",
//                "Xin ch√†o, m√¨nh l√† MealTime AI. H√£y n√≥i m√¨nh bi·∫øt b·∫°n c√≥ g√¨ trong t·ªß l·∫°nh nh√©!"
//        };
//
//        String greeting = greetings[(int) (Math.random() * greetings.length)];
//        chatMessages.add(new ChatMessage(greeting, false));
//        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
//        recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
//    }
//
//}


package com.example.final_project.views.activity;

import android.os.Bundle;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider; // Th√™m import quan tr·ªçng n√†y
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.final_project.R;
import com.example.final_project.helper.GeminiApi;
import com.example.final_project.models.entity.ChatMessage;
import com.example.final_project.models.entity.FoodItem;
import com.example.final_project.models.entity.RecipeData;
import com.example.final_project.viewmodels.FoodItemViewModel;
import com.example.final_project.viewmodels.RecipeViewModel;
import com.example.final_project.views.adapter.ChatAdapter;

import java.util.ArrayList;
import java.util.List;

public class ChatActivity extends AppCompatActivity implements ChatAdapter.OnRecipeSaveListener {

    private RecyclerView recyclerViewChat;
    private EditText etMessage;
    private ImageButton btnSend;
    private List<ChatMessage> chatMessages;
    private ChatAdapter chatAdapter;
    private RecipeViewModel recipeViewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chat);

        recyclerViewChat = findViewById(R.id.recyclerViewChat);
        etMessage = findViewById(R.id.etMessage);
        btnSend = findViewById(R.id.btnSend);

        chatMessages = new ArrayList<>();
        chatAdapter = new ChatAdapter(chatMessages, this);
        recyclerViewChat.setLayoutManager(new LinearLayoutManager(this));
        recyclerViewChat.setAdapter(chatAdapter);

        // Kh·ªüi t·∫°o RecipeViewModel ƒë√∫ng c√°ch, g·∫Øn v·ªõi v√≤ng ƒë·ªùi c·ªßa Activity
        recipeViewModel = new ViewModelProvider(this).get(RecipeViewModel.class);

        // (Khuy·∫øn ngh·ªã) Theo d√µi k·∫øt qu·∫£ l∆∞u t·ª´ ViewModel ƒë·ªÉ ƒë∆∞a ra th√¥ng b√°o ch√≠nh x√°c
        recipeViewModel.saveStatus.observe(this, success -> {
            if (success == null) return; // B·ªè qua gi√° tr·ªã null ban ƒë·∫ßu

            if (success) {
                // Toast n√†y ch·ªâ hi·ªÉn th·ªã khi ViewModel x√°c nh·∫≠n ƒë√£ l∆∞u v√†o DB th√†nh c√¥ng
                Toast.makeText(this, "L∆∞u v√†o DB th√†nh c√¥ng!", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "L·ªói: Kh√¥ng th·ªÉ l∆∞u v√†o DB.", Toast.LENGTH_LONG).show();
            }
            // Reset tr·∫°ng th√°i ƒë·ªÉ kh√¥ng hi·ªÉn th·ªã l·∫°i Toast khi xoay m√†n h√¨nh
            recipeViewModel.resetSaveStatus();
        });


        btnSend.setOnClickListener(v -> sendMessage());
        greetUser();
    }

    private void sendMessage() {
        String message = etMessage.getText().toString().trim();
        if (message.isEmpty()) return;

        chatMessages.add(new ChatMessage(message, true));
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
        etMessage.setText("");

        ChatMessage thinkingMessage = new ChatMessage("ƒêang suy nghƒ©...", false);
        chatMessages.add(thinkingMessage);
        int thinkingIndex = chatMessages.size() - 1;
        chatAdapter.notifyItemInserted(thinkingIndex);
        recyclerViewChat.scrollToPosition(thinkingIndex);

        String m = message.toLowerCase().trim();
        if (m.contains("t·ªß l·∫°nh") || m.contains("tu lanh") || m.contains("my fridge")) {
            new Thread(() -> {
                try {
                    FoodItemViewModel viewModel = new FoodItemViewModel();
                    String userId = "2"; // Sau n√†y l·∫•y t·ª´ session ƒëƒÉng nh·∫≠p
                    List<FoodItem> foodItems = viewModel.getFoodItemsByUserId(userId);

                    if (foodItems == null || foodItems.isEmpty()) {
                        runOnUiThread(() -> {
                            chatMessages.remove(thinkingIndex);
                            chatAdapter.notifyItemRemoved(thinkingIndex);
                            chatMessages.add(new ChatMessage(
                                    "M√¨nh ch∆∞a th·∫•y nguy√™n li·ªáu n√†o trong t·ªß l·∫°nh c·ªßa b·∫°n. H√£y th√™m v√†o nh√©!",
                                    false));
                            chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                        });
                        return;
                    }

                    StringBuilder ingredients = new StringBuilder();
                    for (FoodItem item : foodItems) {
                        if (item.getQuantity() > 0 && item.getFoodName() != null && !item.getFoodName().isEmpty()) {
                            ingredients.append(item.getFoodName())
                                    .append(" (").append(item.getQuantity()).append("), ");
                        }
                    }
                    String ing = ingredients.toString().replaceAll(",\\s*$", "");

                    if (ing.isEmpty()) {
                        runOnUiThread(()-> {
                            chatMessages.remove(thinkingIndex);
                            chatAdapter.notifyItemRemoved(thinkingIndex);
                            chatMessages.add(new ChatMessage("Kh√¥ng c√≥ nguy√™n li·ªáu n√†o h·ª£p l·ªá trong t·ªß l·∫°nh.", false));
                            chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                        });
                        return;
                    }

                    String aiPrompt =
                            "B·∫°n l√† m·ªôt ƒë·∫ßu b·∫øp chuy√™n nghi·ªáp. D·ª±a v√†o nguy√™n li·ªáu sau: " + ing + ". " +
                                    "H√£y g·ª£i √Ω ch√≠nh x√°c 3 m√≥n ƒÉn. " +
                                    "QUAN TR·ªåNG: V·ªõi m·ªói m√≥n, h√£y tr·∫£ l·ªùi theo ƒê√öNG ƒë·ªãnh d·∫°ng sau, KH√îNG th√™m b·∫•t k·ª≥ gi·∫£i th√≠ch n√†o kh√°c:\n" +
                                    "## [S·ªë th·ª© t·ª±]. [T√™n m√≥n ƒÉn]\n" +
                                    "@@nguyenlieu [Li·ªát k√™ nguy√™n li·ªáu c·∫ßn th√™m]\n" +
                                    "@@congthuc [Li·ªát k√™ c√°c b∆∞·ªõc c√¥ng th·ª©c]\n" +
                                    "@@thoigian [Ghi th·ªùi gian n·∫•u]\n" +
                                    "---";

                    new GeminiApi().sendMessage(aiPrompt, new GeminiApi.Callback() {
                        @Override
                        public void onSuccess(String reply) {
                            runOnUiThread(() -> {
                                chatMessages.remove(thinkingIndex);
                                chatAdapter.notifyItemRemoved(thinkingIndex);
                                chatMessages.add(new ChatMessage(reply, false));
                                chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                            });
                        }

                        @Override
                        public void onError(Exception e) {
                            runOnUiThread(() -> {
                                chatMessages.remove(thinkingIndex);
                                chatAdapter.notifyItemRemoved(thinkingIndex);
                                chatMessages.add(new ChatMessage("L·ªói Gemini: " + e.getMessage(), false));
                                chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                            });
                        }
                    });

                } catch (Exception e) {
                    runOnUiThread(() -> {
                        chatMessages.remove(thinkingIndex);
                        chatAdapter.notifyItemRemoved(thinkingIndex);
                        chatMessages.add(new ChatMessage("L·ªói l·∫•y d·ªØ li·ªáu: " + e.getMessage(), false));
                        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                    });
                }
            }).start();
        } else {
            // X·ª≠ l√Ω prompt th∆∞·ªùng
            new GeminiApi().sendMessage(message, new GeminiApi.Callback() {
                @Override
                public void onSuccess(String reply) {
                    runOnUiThread(() -> {
                        chatMessages.remove(thinkingIndex);
                        chatAdapter.notifyItemRemoved(thinkingIndex);
                        chatMessages.add(new ChatMessage(reply, false));
                        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                    });
                }

                @Override
                public void onError(Exception e) {
                    runOnUiThread(() -> {
                        chatMessages.remove(thinkingIndex);
                        chatAdapter.notifyItemRemoved(thinkingIndex);
                        chatMessages.add(new ChatMessage("C√≥ l·ªói x·∫£y ra: " + e.getMessage(), false));
                        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
                    });
                }
            });
        }
    }

    private void greetUser() {
        String[] greetings = {
                "Xin ch√†o! M√¨nh l√† MealTime üçΩÔ∏è ‚Äì tr·ª£ l√Ω g·ª£i √Ω m√≥n ƒÉn c·ªßa b·∫°n h√¥m nay!",
                "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi MealTime ü§ñ! Mu·ªën m√¨nh g·ª£i √Ω b·ªØa ƒÉn ngon mi·ªáng ch·ª©?",
                "Hey! ƒê√¢y l√† MealTime üòã ‚Äì c√πng kh√°m ph√° m√≥n ƒÉn th√∫ v·ªã n√†o!",
                "Xin ch√†o, m√¨nh l√† MealTime AI. H√£y n√≥i m√¨nh bi·∫øt b·∫°n c√≥ g√¨ trong t·ªß l·∫°nh nh√©!"
        };

        String greeting = greetings[(int) (Math.random() * greetings.length)];
        chatMessages.add(new ChatMessage(greeting, false));
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        recyclerViewChat.scrollToPosition(chatMessages.size() - 1);
    }

    @Override
    public void onSaveRecipeClicked(RecipeData recipe) {
        // G·ª≠i y√™u c·∫ßu l∆∞u t·ªõi ViewModel
        String userId = "2"; // L·∫•y userId t·ª´ session/login
        recipeViewModel.saveRecipeToDatabase(recipe, userId);

        // Hi·ªÉn th·ªã th√¥ng b√°o ph·∫£n h·ªìi ngay l·∫≠p t·ª©c cho ng∆∞·ªùi d√πng
        Toast.makeText(this, "ƒê√£ g·ª≠i y√™u c·∫ßu l∆∞u m√≥n: " + recipe.getTitle(), Toast.LENGTH_SHORT).show();
    }
}
